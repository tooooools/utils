{"version":3,"file":"index.js","sources":["../node_modules/eases/back-in-out.js","../node_modules/eases/back-in.js","../node_modules/eases/back-out.js","../node_modules/eases/bounce-out.js","../node_modules/eases/bounce-in-out.js","../node_modules/eases/bounce-in.js","../node_modules/eases/circ-in-out.js","../node_modules/eases/circ-in.js","../node_modules/eases/circ-out.js","../node_modules/eases/cubic-in-out.js","../node_modules/eases/cubic-in.js","../node_modules/eases/cubic-out.js","../node_modules/eases/elastic-in-out.js","../node_modules/eases/elastic-in.js","../node_modules/eases/elastic-out.js","../node_modules/eases/expo-in-out.js","../node_modules/eases/expo-in.js","../node_modules/eases/expo-out.js","../node_modules/eases/linear.js","../node_modules/eases/quad-in-out.js","../node_modules/eases/quad-in.js","../node_modules/eases/quad-out.js","../node_modules/eases/quart-in-out.js","../node_modules/eases/quart-in.js","../node_modules/eases/quart-out.js","../node_modules/eases/quint-in-out.js","../node_modules/eases/quint-in.js","../node_modules/eases/quint-out.js","../node_modules/eases/sine-in-out.js","../node_modules/eases/sine-in.js","../node_modules/eases/sine-out.js","../node_modules/eases/index.js","../node_modules/transformation-matrix/src/fromObject.js","../node_modules/transformation-matrix/src/fromString.js","../node_modules/transformation-matrix/src/utils.js","../node_modules/transformation-matrix/src/translate.js","../node_modules/transformation-matrix/src/transform.js","../node_modules/transformation-matrix/src/rotate.js","../node_modules/transformation-matrix/src/scale.js","../node_modules/transformation-matrix/src/shear.js","../node_modules/transformation-matrix/src/skew.js","../node_modules/transformation-matrix/src/toString.js","../node_modules/transformation-matrix/src/fromDefinition.js","../node_modules/transformation-matrix/src/fromTransformAttribute.autogenerated.js","../node_modules/transformation-matrix/src/fromTransformAttribute.js","../node_modules/transformation-matrix/src/decompose.js","../node_modules/missing-math/dist/missing-math.m.js","../src/SVGTimeline.js"],"sourcesContent":["function backInOut(t) {\n  var s = 1.70158 * 1.525\n  if ((t *= 2) < 1)\n    return 0.5 * (t * t * ((s + 1) * t - s))\n  return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2)\n}\n\nmodule.exports = backInOut","function backIn(t) {\n  var s = 1.70158\n  return t * t * ((s + 1) * t - s)\n}\n\nmodule.exports = backIn","function backOut(t) {\n  var s = 1.70158\n  return --t * t * ((s + 1) * t + s) + 1\n}\n\nmodule.exports = backOut","function bounceOut(t) {\n  var a = 4.0 / 11.0\n  var b = 8.0 / 11.0\n  var c = 9.0 / 10.0\n\n  var ca = 4356.0 / 361.0\n  var cb = 35442.0 / 1805.0\n  var cc = 16061.0 / 1805.0\n\n  var t2 = t * t\n\n  return t < a\n    ? 7.5625 * t2\n    : t < b\n      ? 9.075 * t2 - 9.9 * t + 3.4\n      : t < c\n        ? ca * t2 - cb * t + cc\n        : 10.8 * t * t - 20.52 * t + 10.72\n}\n\nmodule.exports = bounceOut","var bounceOut = require('./bounce-out')\n\nfunction bounceInOut(t) {\n  return t < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5\n}\n\nmodule.exports = bounceInOut","var bounceOut = require('./bounce-out')\n\nfunction bounceIn(t) {\n  return 1.0 - bounceOut(1.0 - t)\n}\n\nmodule.exports = bounceIn","function circInOut(t) {\n  if ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1)\n  return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1)\n}\n\nmodule.exports = circInOut","function circIn(t) {\n  return 1.0 - Math.sqrt(1.0 - t * t)\n}\n\nmodule.exports = circIn","function circOut(t) {\n  return Math.sqrt(1 - ( --t * t ))\n}\n\nmodule.exports = circOut","function cubicInOut(t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0\n}\n\nmodule.exports = cubicInOut","function cubicIn(t) {\n  return t * t * t\n}\n\nmodule.exports = cubicIn","function cubicOut(t) {\n  var f = t - 1.0\n  return f * f * f + 1.0\n}\n\nmodule.exports = cubicOut","function elasticInOut(t) {\n  return t < 0.5\n    ? 0.5 * Math.sin(+13.0 * Math.PI/2 * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n    : 0.5 * Math.sin(-13.0 * Math.PI/2 * ((2.0 * t - 1.0) + 1.0)) * Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) + 1.0\n}\n\nmodule.exports = elasticInOut","function elasticIn(t) {\n  return Math.sin(13.0 * t * Math.PI/2) * Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nmodule.exports = elasticIn","function elasticOut(t) {\n  return Math.sin(-13.0 * (t + 1.0) * Math.PI/2) * Math.pow(2.0, -10.0 * t) + 1.0\n}\n\nmodule.exports = elasticOut","function expoInOut(t) {\n  return (t === 0.0 || t === 1.0)\n    ? t\n    : t < 0.5\n      ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)\n      : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0\n}\n\nmodule.exports = expoInOut","function expoIn(t) {\n  return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nmodule.exports = expoIn","function expoOut(t) {\n  return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t)\n}\n\nmodule.exports = expoOut","function linear(t) {\n  return t\n}\n\nmodule.exports = linear","function quadInOut(t) {\n    t /= 0.5\n    if (t < 1) return 0.5*t*t\n    t--\n    return -0.5 * (t*(t-2) - 1)\n}\n\nmodule.exports = quadInOut","function quadIn(t) {\n  return t * t\n}\n\nmodule.exports = quadIn","function quadOut(t) {\n  return -t * (t - 2.0)\n}\n\nmodule.exports = quadOut","function quarticInOut(t) {\n  return t < 0.5\n    ? +8.0 * Math.pow(t, 4.0)\n    : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0\n}\n\nmodule.exports = quarticInOut","function quarticIn(t) {\n  return Math.pow(t, 4.0)\n}\n\nmodule.exports = quarticIn","function quarticOut(t) {\n  return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0\n}\n\nmodule.exports = quarticOut","function qinticInOut(t) {\n    if ( ( t *= 2 ) < 1 ) return 0.5 * t * t * t * t * t\n    return 0.5 * ( ( t -= 2 ) * t * t * t * t + 2 )\n}\n\nmodule.exports = qinticInOut","function qinticIn(t) {\n  return t * t * t * t * t\n}\n\nmodule.exports = qinticIn","function qinticOut(t) {\n  return --t * t * t * t * t + 1\n}\n\nmodule.exports = qinticOut","function sineInOut(t) {\n  return -0.5 * (Math.cos(Math.PI*t) - 1)\n}\n\nmodule.exports = sineInOut","function sineIn (t) {\n  var v = Math.cos(t * Math.PI * 0.5)\n  if (Math.abs(v) < 1e-14) return 1\n  else return 1 - v\n}\n\nmodule.exports = sineIn\n","function sineOut(t) {\n  return Math.sin(t * Math.PI/2)\n}\n\nmodule.exports = sineOut","module.exports = {\n\t'backInOut': require('./back-in-out'),\n\t'backIn': require('./back-in'),\n\t'backOut': require('./back-out'),\n\t'bounceInOut': require('./bounce-in-out'),\n\t'bounceIn': require('./bounce-in'),\n\t'bounceOut': require('./bounce-out'),\n\t'circInOut': require('./circ-in-out'),\n\t'circIn': require('./circ-in'),\n\t'circOut': require('./circ-out'),\n\t'cubicInOut': require('./cubic-in-out'),\n\t'cubicIn': require('./cubic-in'),\n\t'cubicOut': require('./cubic-out'),\n\t'elasticInOut': require('./elastic-in-out'),\n\t'elasticIn': require('./elastic-in'),\n\t'elasticOut': require('./elastic-out'),\n\t'expoInOut': require('./expo-in-out'),\n\t'expoIn': require('./expo-in'),\n\t'expoOut': require('./expo-out'),\n\t'linear': require('./linear'),\n\t'quadInOut': require('./quad-in-out'),\n\t'quadIn': require('./quad-in'),\n\t'quadOut': require('./quad-out'),\n\t'quartInOut': require('./quart-in-out'),\n\t'quartIn': require('./quart-in'),\n\t'quartOut': require('./quart-out'),\n\t'quintInOut': require('./quint-in-out'),\n\t'quintIn': require('./quint-in'),\n\t'quintOut': require('./quint-out'),\n\t'sineInOut': require('./sine-in-out'),\n\t'sineIn': require('./sine-in'),\n\t'sineOut': require('./sine-out')\n}","/**\n * Extract an affine matrix from an object that contains a,b,c,d,e,f keys\n * Any value could be a float or a string that contains a float\n * @param object {Object} Object that contains a,b,c,d,e,f keys\n * @return {Matrix} Affine Matrix\n */\nexport function fromObject (object) {\n  return {\n    a: parseFloat(object.a),\n    b: parseFloat(object.b),\n    c: parseFloat(object.c),\n    d: parseFloat(object.d),\n    e: parseFloat(object.e),\n    f: parseFloat(object.f)\n  }\n}\n","/**\n * @ignore\n * @type {RegExp}\n */\nconst matrixRegex = /^matrix\\(\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*\\)$/i\n\n/**\n * Parse a string formatted as matrix(a,b,c,d,e,f)\n * @param string {string} String with an affine matrix\n * @returns {Matrix} Affine Matrix\n *\n * @example\n * > fromString('matrix(1,2,3,4,5,6)')\n * {a: 1, b: 2, c: 3, d: 4, c: 5, e: 6}\n */\nexport function fromString (string) {\n  const parsed = string.match(matrixRegex)\n  if (parsed === null || parsed.length < 7) throw new Error(`'${string}' is not a matrix`)\n  return {\n    a: parseFloat(parsed[1]),\n    b: parseFloat(parsed[2]),\n    c: parseFloat(parsed[3]),\n    d: parseFloat(parsed[4]),\n    e: parseFloat(parsed[5]),\n    f: parseFloat(parsed[6])\n  }\n}\n","export function isUndefined (val) {\n  return typeof val === 'undefined'\n}\n\nexport function isNumeric (n) {\n  return typeof n === 'number' &&\n    !Number.isNaN(n) &&\n    Number.isFinite(n)\n}\n\nexport function isObject (obj) {\n  return typeof obj === 'object' &&\n    obj !== null &&\n    !Array.isArray(obj)\n}\n\nexport function matchesShape (obj, keys) {\n  return keys.every(key => key in obj)\n}\n","/**\n * Calculate a translate matrix\n * @param tx {number} Translation on axis x\n * @param [ty = 0] {number} Translation on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function translate (tx, ty = 0) {\n  return {\n    a: 1,\n    c: 0,\n    e: tx,\n    b: 0,\n    d: 1,\n    f: ty\n  }\n}\n","/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function transform (...matrices) {\n  matrices = Array.isArray(matrices[0]) ? matrices[0] : matrices\n\n  const multiply = (m1, m2) => {\n    return {\n      a: m1.a * m2.a + m1.c * m2.b,\n      c: m1.a * m2.c + m1.c * m2.d,\n      e: m1.a * m2.e + m1.c * m2.f + m1.e,\n      b: m1.b * m2.a + m1.d * m2.b,\n      d: m1.b * m2.c + m1.d * m2.d,\n      f: m1.b * m2.e + m1.d * m2.f + m1.f\n    }\n  }\n\n  switch (matrices.length) {\n    case 0:\n      throw new Error('no matrices provided')\n\n    case 1:\n      return matrices[0]\n\n    case 2:\n      return multiply(matrices[0], matrices[1])\n\n    default: {\n      const [m1, m2, ...rest] = matrices\n      const m = multiply(m1, m2)\n      return transform(m, ...rest)\n    }\n  }\n}\n\n/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function compose (...matrices) {\n  return transform(...matrices)\n}\n","import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\nconst { cos, sin, PI } = Math\n/**\n * Calculate a rotation matrix\n * @param angle {number} Angle in radians\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotate (angle, cx, cy) {\n  const cosAngle = cos(angle)\n  const sinAngle = sin(angle)\n  const rotationMatrix = {\n    a: cosAngle,\n    c: -sinAngle,\n    e: 0,\n    b: sinAngle,\n    d: cosAngle,\n    f: 0\n  }\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return rotationMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    rotationMatrix,\n    translate(-cx, -cy)\n  ])\n}\n\n/**\n * Calculate a rotation matrix with a DEG angle\n * @param angle {number} Angle in degree\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotateDEG (angle, cx = undefined, cy = undefined) {\n  return rotate(angle * PI / 180, cx, cy)\n}\n","import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\n/**\n * Calculate a scaling matrix\n * @param sx {number} Scaling on axis x\n * @param [sy = sx] {number} Scaling on axis y (default sx)\n * @param [cx] {number} If (cx,cy) are supplied the scaling is about this point\n * @param [cy] {number} If (cx,cy) are supplied the scaling is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function scale (sx, sy = undefined, cx = undefined, cy = undefined) {\n  if (isUndefined(sy)) sy = sx\n\n  const scaleMatrix = {\n    a: sx,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: sy,\n    f: 0\n  }\n\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return scaleMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    scaleMatrix,\n    translate(-cx, -cy)\n  ])\n}\n","/**\n * Calculate a shear matrix\n * @param shx {number} Shear on axis x\n * @param shy {number} Shear on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function shear (shx, shy) {\n  return {\n    a: 1,\n    c: shx,\n    e: 0,\n    b: shy,\n    d: 1,\n    f: 0\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skew\nconst { tan } = Math\n\n/**\n * Calculate a skew matrix\n * @param ax {number} Skew on axis x\n * @param ay {number} Skew on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function skew (ax, ay) {\n  return {\n    a: 1,\n    c: tan(ax),\n    e: 0,\n    b: tan(ay),\n    d: 1,\n    f: 0\n  }\n}\n\n/**\n * Calculate a skew matrix using DEG angles\n * @param ax {number} Skew on axis x\n * @param ay {number} Skew on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function skewDEG (ax, ay) {\n  return skew(ax * Math.PI / 180, ay * Math.PI / 180)\n}\n","/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toCSS (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toSVG (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toString (matrix) {\n  return `matrix(${matrix.a},${matrix.b},${matrix.c},${matrix.d},${matrix.e},${matrix.f})`\n}\n","import { fromObject } from './fromObject'\nimport { translate } from './translate'\nimport { scale } from './scale'\nimport { rotateDEG } from './rotate'\nimport { skewDEG } from './skew'\nimport { shear } from './shear'\n\n/**\n * Converts array of matrix descriptor to array of matrix\n * @param definitionOrArrayOfDefinition {Object[]} Array of object describing the matrix\n * @returns {Matrix[]} Array of matrix\n *\n * @example\n * > fromDefinition([\n *  { type: 'matrix', a:1, b:2, c:3, d:4, e:5, f:6 },\n *  { type: 'translate', tx: 10, ty: 20 },\n *  { type: 'scale', sx: 2, sy: 4 },\n *  { type: 'rotate', angle: 90, cx: 50, cy: 25 },\n *  { type: 'skewX', angle: 45 },\n *  { type: 'skewY',  angle: 45 },\n *  { type: 'shear', shx: 10, shy: 20}\n * ])\n *\n * [\n *  { a: 1, b: 2, c: 3, d: 4, e: 5, f: 6 },\n *  { a: 1, c: 0, e: 10, b: 0, d: 1, f: 20 },\n *  { a: 2, c: 0, e: 0, b: 0, d: 4, f: 0 },\n *  { a: 6.123, c: -1, e: 0, b: 1, d: 6.123, f: 0 },\n *  { a: 1, c: 0.99.., e: 0, b: 0, d: 1, f: 0 },\n *  { a: 1, c: 0, e: 0, b: 0.99, d: 1, f: 0 },\n *  { a: 1, c: 10, e: 0, b: 20, d: 1, f: 0 }\n * ]\n **/\nexport function fromDefinition (definitionOrArrayOfDefinition) {\n  return Array.isArray(definitionOrArrayOfDefinition)\n    ? definitionOrArrayOfDefinition.map(mapper)\n    : mapper(definitionOrArrayOfDefinition)\n\n  function mapper (descriptor) {\n    switch (descriptor.type) {\n      case 'matrix':\n        if ('a' in descriptor &&\n          'b' in descriptor &&\n          'c' in descriptor &&\n          'd' in descriptor &&\n          'e' in descriptor &&\n          'f' in descriptor\n        ) {\n          return fromObject(descriptor)\n        } else {\n          throw new Error('MISSING_MANDATORY_PARAM')\n        }\n\n      case 'translate':\n        if (!('tx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('ty' in descriptor) return translate(descriptor.tx, descriptor.ty)\n\n        return translate(descriptor.tx)\n\n      case 'scale':\n        if (!('sx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('sy' in descriptor) return scale(descriptor.sx, descriptor.sy)\n\n        return scale(descriptor.sx)\n\n      case 'rotate':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('cx' in descriptor && 'cy' in descriptor) {\n          return rotateDEG(descriptor.angle, descriptor.cx, descriptor.cy)\n        }\n        return rotateDEG(descriptor.angle)\n\n      case 'skewX':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(descriptor.angle, 0)\n\n      case 'skewY':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(0, descriptor.angle)\n\n      case 'shear':\n        if (!('shx' in descriptor && 'shy' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return shear(descriptor.shx, descriptor.shy)\n\n      default:\n        throw new Error('UNSUPPORTED_DESCRIPTOR')\n    }\n  }\n}\n","// Generated by Peggy 3.0.0.\n//\n// https://peggyjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s = (this.location.source && (typeof this.location.source.offset === \"function\"))\n      ? this.location.source.offset(s)\n      : s;\n    var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = (last - s.column) || 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + offset_s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n          + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { transformList: peg$parsetransformList };\n  var peg$startRuleFunction = peg$parsetransformList;\n\n  var peg$c0 = \"matrix\";\n  var peg$c1 = \"(\";\n  var peg$c2 = \")\";\n  var peg$c3 = \"translate\";\n  var peg$c4 = \"scale\";\n  var peg$c5 = \"rotate\";\n  var peg$c6 = \"skewX\";\n  var peg$c7 = \"skewY\";\n  var peg$c8 = \",\";\n  var peg$c9 = \".\";\n\n  var peg$r0 = /^[eE]/;\n  var peg$r1 = /^[+\\-]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\t\\r\\n]/;\n\n  var peg$e0 = peg$literalExpectation(\"matrix\", false);\n  var peg$e1 = peg$literalExpectation(\"(\", false);\n  var peg$e2 = peg$literalExpectation(\")\", false);\n  var peg$e3 = peg$literalExpectation(\"translate\", false);\n  var peg$e4 = peg$literalExpectation(\"scale\", false);\n  var peg$e5 = peg$literalExpectation(\"rotate\", false);\n  var peg$e6 = peg$literalExpectation(\"skewX\", false);\n  var peg$e7 = peg$literalExpectation(\"skewY\", false);\n  var peg$e8 = peg$literalExpectation(\",\", false);\n  var peg$e9 = peg$otherExpectation(\"fractionalConstant\");\n  var peg$e10 = peg$literalExpectation(\".\", false);\n  var peg$e11 = peg$classExpectation([\"e\", \"E\"], false, false);\n  var peg$e12 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e13 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e14 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n\n  var peg$f0 = function(ts) { return ts; };\n  var peg$f1 = function(t, ts) { return t.concat(ts) };\n  var peg$f2 = function(a, b, c, d, e, f) {\n      return [{type: 'matrix', a: a, b: b, c: c, d: d, e: e, f: f}];\n    };\n  var peg$f3 = function(tx, ty) {\n      var t = {type: 'translate', tx: tx};\n      if (ty) t.ty = ty;\n      return [t];\n    };\n  var peg$f4 = function(sx, sy) {\n      var s = {type:'scale', sx: sx};\n      if (sy) s.sy = sy;\n      return [s];\n    };\n  var peg$f5 = function(angle, c) {\n      var r = {type:'rotate', angle: angle};\n      if (c) {\n        r.cx = c[0];\n        r.cy = c[1];\n      }\n      return [r];\n    };\n  var peg$f6 = function(angle) {\n      return [{type: 'skewX', angle: angle}];\n    };\n  var peg$f7 = function(angle) {\n      return [{type: 'skewY', angle: angle}];\n    };\n  var peg$f8 = function(f) { return parseFloat(f.join(\"\")); };\n  var peg$f9 = function(i) { return parseInt(i.join(\"\")); };\n  var peg$f10 = function(n) { return n; };\n  var peg$f11 = function(n1, n2) { return [n1, n2]; };\n  var peg$f12 = function(ds) { return ds.join(\"\"); };\n  var peg$f13 = function(f, e) { return [f, e || null].join(\"\")};\n  var peg$f14 = function(d, e) { return [d, e].join(\"\")};\n  var peg$f15 = function(d1, d2) { return [d1 ? d1.join(\"\") : null, \".\", d2.join(\"\")].join(\"\"); };\n  var peg$f16 = function(d) { return d.join(\"\"); };\n  var peg$f17 = function(s, d) { return ['e', s, d.join(\"\")].join(\"\") };\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n    if (offset && peg$source && (typeof peg$source.offset === \"function\")) {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsetransformList() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsewsp();\n    }\n    s2 = peg$parsetransforms();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = [];\n    s4 = peg$parsewsp();\n    while (s4 !== peg$FAILED) {\n      s3.push(s4);\n      s4 = peg$parsewsp();\n    }\n    peg$savedPos = s0;\n    s0 = peg$f0(s2);\n\n    return s0;\n  }\n\n  function peg$parsetransforms() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsetransform();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecommaWsp();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsecommaWsp();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetransforms();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f1(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetransform();\n    }\n\n    return s0;\n  }\n\n  function peg$parsetransform() {\n    var s0;\n\n    s0 = peg$parsematrix();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetranslate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsescale();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parserotate();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseskewX();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseskewY();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsematrix() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c0) {\n      s1 = peg$c0;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWsp();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenumber();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parsecommaWsp();\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parsenumber();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parsecommaWsp();\n                  if (s10 !== peg$FAILED) {\n                    s11 = peg$parsenumber();\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parsecommaWsp();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parsenumber();\n                        if (s13 !== peg$FAILED) {\n                          s14 = peg$parsecommaWsp();\n                          if (s14 !== peg$FAILED) {\n                            s15 = peg$parsenumber();\n                            if (s15 !== peg$FAILED) {\n                              s16 = [];\n                              s17 = peg$parsewsp();\n                              while (s17 !== peg$FAILED) {\n                                s16.push(s17);\n                                s17 = peg$parsewsp();\n                              }\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s17 = peg$c2;\n                                peg$currPos++;\n                              } else {\n                                s17 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$e2); }\n                              }\n                              if (s17 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s0 = peg$f2(s5, s7, s9, s11, s13, s15);\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetranslate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 9) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e3); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f3(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f4(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c5) {\n      s1 = peg$c5;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspTwoNumbers();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f5(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewX() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c6) {\n      s1 = peg$c6;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f6(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewY() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f7(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsesign();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parsefloatingPointConstant();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f8(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseintegerConstant();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f9(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWspNumber() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f10(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWspTwoNumbers() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecommaWsp();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsenumber();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f11(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWsp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsewsp();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomma();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$parsewsp();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parsewsp();\n      }\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsecomma();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsewsp();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsewsp();\n        }\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomma() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s0 = peg$c8;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e8); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseintegerConstant() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f12(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsefloatingPointConstant() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefractionalConstant();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseexponent();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexponent();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f14(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefractionalConstant() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c9;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f15(s1, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e10); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f16(s1);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexponent() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesign() {\n    var s0;\n\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigitSequence() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsedigit();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsedigit();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigit() {\n    var s0;\n\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e13); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewsp() {\n    var s0;\n\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e14); }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport {\n  peg$SyntaxError as SyntaxError,\n\n  peg$parse as parse\n};\n","import { parse } from './fromTransformAttribute.autogenerated'\n\n/**\n * Parser for SVG Trasform Attribute http://www.w3.org/TR/SVG/coords.html#TransformAttribute <br/>\n * Warning: This should be considered BETA until it is released a stable version of pegjs.\n * @param transformString {string} Transform string as defined by w3 Consortium\n * @returns {MatrixDescriptor[]} Array of MatrixDescriptor\n *\n * @example\n * > fromTransformAttribute('translate(-10,-10) scale(2,2) translate(10,10)')\n * [\n *  { type: 'translate', tx: -10, ty: -10},\n *  { type: 'scale', sx: 2, sy: 2 },\n *  { type: 'translate', tx: 10, ty: 10}\n * ]\n *\n * > compose(fromDefinition(fromTransformAttribute('translate(-10, -10) scale(10, 10)')))\n * { a: 10, c: 0, e: -10, b: 0, d: 10, f: -10 }\n */\nexport function fromTransformAttribute (transformString) {\n  return parse(transformString)\n}\n","import { scale } from './scale'\nimport { compose } from './transform'\n/**\n * Decompose a matrix into translation, scaling and rotation components, optionally\n * take horizontal and vertical flip in to consideration.\n * Note this function decomposes a matrix in rotation -> scaling -> translation order. I.e. for\n * certain translation T {tx, ty}, rotation R and scaling S { sx, sy }, it's only true for:\n *  decomposeTSR(compose(T, S, R)) === { translate: T, rotation: R, scale: S }\n * composing in a different order may yield a different decomposition result.\n * @param matrix {Matrix} Affine Matrix\n * @param  flipX {boolean} Whether the matrix contains vertical flip, i.e. mirrors on x-axis\n * @param  flipY {boolean} Whether the matrix contains horizontal flip, i.e. mirrors on y-axis\n * @returns {Transform} A transform object consisted by its translation, scaling\n * and rotation components.\n */\nexport function decomposeTSR (matrix, flipX = false, flipY = false) {\n  // Remove flip from the matrix first - flip could be incorrectly interpreted as\n  // rotations (e.g. flipX + flipY = rotate by 180 degrees).\n  // Note flipX is a vertical flip, and flipY is a horizontal flip.\n  if (flipX) {\n    if (flipY) {\n      matrix = compose(matrix, scale(-1, -1))\n    } else {\n      matrix = compose(matrix, scale(1, -1))\n    }\n  } else if (flipY) {\n    matrix = compose(matrix, scale(-1, 1))\n  }\n\n  const a = matrix.a; const b = matrix.b\n  const c = matrix.c; const d = matrix.d\n  let scaleX, scaleY, rotation\n\n  if (a !== 0 || c !== 0) {\n    const hypotAc = Math.hypot(a, c)\n    scaleX = hypotAc\n    scaleY = (a * d - b * c) / hypotAc\n    const acos = Math.acos(a / hypotAc)\n    rotation = c > 0 ? -acos : acos\n  } else if (b !== 0 || d !== 0) {\n    const hypotBd = Math.hypot(b, d)\n    scaleX = (a * d - b * c) / hypotBd\n    scaleY = hypotBd\n    const acos = Math.acos(b / hypotBd)\n    rotation = Math.PI / 2 + (d > 0 ? -acos : acos)\n  } else {\n    scaleX = 0\n    scaleY = 0\n    rotation = 0\n  }\n\n  // put the flip factors back\n  if (flipY) {\n    scaleX = -scaleX\n  }\n\n  if (flipX) {\n    scaleY = -scaleY\n  }\n\n  return {\n    translate: { tx: matrix.e, ty: matrix.f },\n    scale: { sx: scaleX, sy: scaleY },\n    rotation: { angle: rotation }\n  }\n}\n","function n(n,t,r){return Math.max(t,Math.min(n,r))}function t(n,r,o){return n>o?n%o:n<r?t(n+o,r,o):n}function r(n,t,r,u){return void 0===u&&(u=!1),o(n,t,r,0,1,u)}function o(t,r,o,u,i,a){void 0===a&&(a=!1);var e=(t-r)*(i-u)/(o-r)+u;return a?n(e,u,i):e}function u(n,t,r){return n+r*(t-n)}function i(n,t,r){return void 0===r&&(r=Math.random),void 0!==t?u(n,t,r()):u(0,n,r())}function a(n,t,r){return void 0===r&&(r=Math.random),Math.floor(i(n,t,r))}function e(n){return 180*n/Math.PI}function f(n){return n*Math.PI/180}function c(n,t){return Math.ceil(n/t)*t}function h(n,t){return Math.round(n/t)*t}function M(n,t){return Math.floor(n/t)*t}function d(n,t){var r=n-Math.floor(n);return t?+r.toFixed(t):r}export{n as clamp,t as wrap,r as normalize,o as map,u as lerp,i as random,a as randomInt,e as degrees,f as radians,c as ceilTo,h as roundTo,M as floorTo,d as fract};\n//# sourceMappingURL=missing-math.m.js.map\n","/**\n  new Timeline({\n    duration: '1s'|'1000ms'|60,\n    frameRate: 60,\n    loop: true|false,\n    interpolations: {\n      '.css-selector': {\n        stagger: '100ms', // stagger|span\n        property1: {\n          initial: 0\n          from: 0,\n          to: 100,\n          delay: '1s',\n          duration: '3000ms',\n          easing: 'linear' // See https://github.com/mattdesl/eases\n        },\n        property2: {…},\n      },\n      'svg > path': {\n        d: {\n          from: [[0, 0], [0, 1], [0, 2]]\n          to: [[0, 0, [1, 1], [0, 2]]]\n        }\n      }\n    }\n  })\n */\n\nimport eases from 'eases'\nimport * as Transform from 'transformation-matrix'\nimport { clamp, lerp, radians } from 'missing-math'\n\nconst SUPPORTED_TRANSFORM_ATTRIBUTES = [\n  'translateX',\n  'translateY',\n  'rotate',\n  'scale',\n  'scaleX',\n  'scaleY'\n]\n\nconst lerpArray = (a, b, t) => Array.isArray(a) ? a.map((v, i) => lerpArray(v, b[i], t)) : lerp(a, b, t)\n\nfunction toPathData (arr, { decimals = 3, close = true } = {}) {\n  let d = ''\n  for (let i = 0; i < arr.length + (close ? 1 : 0); i++) {\n    d += i ? ' L ' : 'M '\n    d += arr[i % arr.length][0].toFixed(decimals) + ' ' + arr[i % arr.length][1].toFixed(decimals)\n  }\n\n  if (close) d += ' Z'\n\n  return d\n}\n\nexport default class SVGTimeline {\n  constructor ({\n    interpolations = {},\n    loop = false,\n    duration = 0,\n    frameRate = 60\n  } = {}) {\n    this.props = { interpolations, duration, frameRate, loop }\n    this.length = this.toFrames(duration)\n  }\n\n  get interpolations () { return this.props.interpolations }\n  set interpolations (o) { this.props.interpolations = o }\n\n  get frameRate () { return this.props.frameRate }\n\n  set loop (s) { this.props.loop = s }\n  get loop () { return this.props.loop }\n\n  // Convert '1s', '10ms', 10 to a number of frames based on a frame rate\n  toFrames (duration = 0) {\n    const [, value, unit] = (/([-+]?[0-9.]+)([a-z%]*)/.exec(duration) ?? [parseFloat(duration)])\n    if (!unit) return value\n\n    // Handle 'ms' and 's', 's' being the default\n    let factor = 1\n    if (unit === 'ms') factor = 1000\n\n    return Math.floor((value / factor) * this.props.frameRate)\n  }\n\n  // Interpolate a specific frame and apply the whole timeline to a document\n  apply (document, frameIndex = null) {\n    // Iterate all selectors\n    for (const selector in this.props.interpolations) {\n      const els = document.querySelectorAll(selector)\n      if (!els) continue\n\n      // Prepare stagger\n      let staggerDelay = 0\n      const staggerAmt = this.props.interpolations[selector].span\n        ? this.toFrames(this.props.interpolations[selector].span ?? 0) / els.length\n        : this.toFrames(this.props.interpolations[selector].stagger ?? 0)\n\n      // Iterate all elements matching current selector\n      for (const el of els) {\n        // Iterate all defined interpolations for this selector\n        for (let attr in this.props.interpolations[selector]) {\n          if (attr === 'stagger') continue\n          const {\n            initial,\n            from,\n            to,\n            delay,\n            duration,\n            easing\n          } = this.props.interpolations[selector][attr]\n\n          const d = this.toFrames(duration ?? this.length)\n          const dl = this.toFrames(delay ?? 0) + staggerDelay\n          const t = clamp((frameIndex - dl) / d, 0, 1)\n\n          const ease = eases[easing ?? 'linear']\n          if (!ease) throw new Error(`easing function '${easing}' does not exist. See https://github.com/mattdesl/eases for available functions.`)\n\n          let v = lerpArray(frameIndex < dl && initial !== undefined ? initial : from, to, ease(t))\n\n          // Handle SVG transformations\n          if (SUPPORTED_TRANSFORM_ATTRIBUTES.includes(attr)) {\n            const initialValue = el.getAttribute('transform') ?? 'translate(0,0)'\n\n            const initialMatrix = /^matrix/i.test(initialValue)\n              ? Transform.fromString(initialValue)\n              : Transform.fromDefinition(Transform.fromTransformAttribute(initialValue))[0]\n\n            const { translate, scale, rotation } = Transform.decomposeTSR(\n              initialMatrix ?? Transform.translate(0)\n            )\n\n            switch (attr) {\n              case 'translateX':\n                translate.tx = v\n                break\n              case 'translateY':\n                translate.ty = v\n                break\n              case 'scale':\n                scale.sx = v\n                scale.sy = v\n                break\n              case 'scaleX':\n                scale.sx = v\n                break\n              case 'scaleY':\n                scale.sy = v\n                break\n              case 'rotate':\n                rotation.angle = radians(v)\n                break\n            }\n\n            const matrix = Transform.compose(\n              Transform.translate(translate.tx ?? 0, translate.ty ?? 0),\n              Transform.scale(scale.sx ?? 1, scale.sy ?? 1),\n              Transform.rotate(rotation.angle ?? 0)\n            )\n\n            attr = 'transform'\n            v = Transform.toString(matrix)\n          }\n\n          if (attr === 'd') v = toPathData(v)\n          el.setAttribute(attr, v)\n        }\n\n        // Increment delay for the next element matching the current selector\n        staggerDelay += staggerAmt\n      }\n    }\n  }\n\n  toJSON () {\n    return this.props\n  }\n}\n"],"names":["backInOut","t","s","backInOut_1","backIn","backIn_1","backOut","backOut_1","bounceOut","a","b","c","ca","cb","cc","t2","bounceOut_1","require$$0","bounceInOut","bounceInOut_1","bounceIn","bounceIn_1","circInOut","circInOut_1","circIn","circIn_1","circOut","circOut_1","cubicInOut","cubicInOut_1","cubicIn","cubicIn_1","cubicOut","f","cubicOut_1","elasticInOut","elasticInOut_1","elasticIn","elasticIn_1","elasticOut","elasticOut_1","expoInOut","expoInOut_1","expoIn","expoIn_1","expoOut","expoOut_1","linear","linear_1","quadInOut","quadInOut_1","quadIn","quadIn_1","quadOut","quadOut_1","quarticInOut","quartInOut","quarticIn","quartIn","quarticOut","quartOut","qinticInOut","quintInOut","qinticIn","quintIn","qinticOut","quintOut","sineInOut","sineInOut_1","sineIn","v","sineIn_1","sineOut","sineOut_1","eases","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","fromObject","object","matrixRegex","fromString","string","parsed","isUndefined","val","translate","tx","ty","transform","matrices","multiply","m1","m2","rest","m","compose","cos","sin","PI","rotate","angle","cx","cy","cosAngle","sinAngle","rotationMatrix","rotateDEG","scale","sx","sy","scaleMatrix","shear","shx","shy","tan","skew","ax","ay","skewDEG","toString","matrix","fromDefinition","definitionOrArrayOfDefinition","mapper","descriptor","peg$subclass","child","parent","C","peg$SyntaxError","message","expected","found","location","self","peg$padEnd","str","targetLength","padString","sources","src","k","offset_s","loc","e","filler","line","last","hatLen","DESCRIBE_EXPECTATION_FNS","expectation","literalEscape","escapedParts","part","classEscape","hex","ch","describeExpectation","describeExpected","descriptions","i","j","describeFound","peg$parse","input","options","peg$FAILED","peg$source","peg$startRuleFunctions","peg$parsetransformList","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$r0","peg$r1","peg$r2","peg$r3","peg$e0","peg$literalExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$otherExpectation","peg$e10","peg$e11","peg$classExpectation","peg$e12","peg$e13","peg$e14","peg$f0","ts","peg$f1","peg$f2","d","peg$f3","peg$f4","peg$f5","r","peg$f6","peg$f7","peg$f8","peg$f9","peg$f10","n","peg$f11","n1","n2","peg$f12","ds","peg$f13","peg$f14","peg$f15","d1","d2","peg$f16","peg$f17","peg$currPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","text","ignoreCase","parts","inverted","peg$endExpectation","description","peg$computePosDetails","pos","details","p","peg$computeLocation","startPos","endPos","offset","startPosDetails","endPosDetails","res","peg$fail","peg$buildStructuredError","s0","s1","s2","s3","s4","peg$parsewsp","peg$parsetransforms","peg$parsetransform","peg$parsecommaWsp","peg$parsematrix","peg$parsetranslate","peg$parsescale","peg$parserotate","peg$parseskewX","peg$parseskewY","s5","s6","s7","s8","s9","s10","s11","s12","s13","s14","s15","s16","s17","peg$parsenumber","peg$parsecommaWspNumber","peg$parsecommaWspTwoNumbers","peg$parsesign","peg$parsefloatingPointConstant","peg$parseintegerConstant","peg$parsecomma","peg$parsedigitSequence","peg$parsefractionalConstant","peg$parseexponent","peg$parsedigit","fromTransformAttribute","transformString","parse","decomposeTSR","flipX","flipY","scaleX","scaleY","rotation","hypotAc","acos","hypotBd","u","SUPPORTED_TRANSFORM_ATTRIBUTES","lerpArray","lerp","toPathData","arr","decimals","close","SVGTimeline","interpolations","loop","duration","frameRate","o","value","unit","factor","document","frameIndex","selector","els","staggerDelay","staggerAmt","el","attr","initial","from","to","delay","easing","dl","clamp","ease","initialValue","initialMatrix","Transform.fromString","Transform.fromDefinition","Transform.fromTransformAttribute","Transform.decomposeTSR","Transform.translate","radians","Transform.compose","Transform.scale","Transform.rotate","Transform.toString"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46]}